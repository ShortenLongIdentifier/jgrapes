def releaseVersion = version.replaceAll(/-SNAPSHOT$/, "")
def relVer = org.gradle.util.VersionNumber.parse(releaseVersion)
// Don't baseline before 1.0.0
if (plugins.hasPlugin('biz.aQute.bnd.builder') && relVer.getMajor() > 0) {
    dependencies {
        // Use gradle mechanims to get the artifact to baseline against.
        // We baseline against the previous release 
        // (latest excluding current)
        def cmpVer = null
        if (relVer.getMicro() > 0) {
            cmpVer = new org.gradle.util.VersionNumber(
                relVer.getMajor(), relVer.getMinor(), relVer.getMicro() - 1, null)
        } else if (relVer.getMinor() > 0) {
            cmpVer = new org.gradle.util.VersionNumber(
                relVer.getMajor(), relVer.getMinor() - 1, 999999, null)
        } else if (relVer.getMajor() > 0) {
            cmpVer = new org.gradle.util.VersionNumber(
                relVer.getMajor() - 1, 999999, 999999, null)
        } else {
            cmpVer = new org.gradle.util.VersionNumber(
                0, 999999, 999999, null)
        }
    
        baseline("${group}:${project.name}:(,${cmpVer}]") {
            transitive false
        }
    }

    // Resolve with different group id,
    // see https://github.com/gradle/gradle/issues/8717
    def oldGroup = project.group
    try {
        project.group = 'dummy_group_for_baselining'
        configurations.baseline.files
    } finally {
        project.group = oldGroup
    }

    if (project.hasProperty('ignoreBaselineFailures')) {
        baseline {
            ignoreFailures true
        }
    }
    
    model {
        tasks.publishMavenPublicationToSnapshotRepository {
            dependsOn baseline
        }
        tasks.publishMavenPublicationToReleaseRepository {
            dependsOn baseline
        }
    }
}

