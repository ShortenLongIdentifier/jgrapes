test {
//	// set a system property for the test JVM(s)
//	systemProperty 'java.util.logging.config.file', 'jul-debug.properties'
//  
//	// show standard out and standard error of the test JVM(s) on the console
//	testLogging.showStandardStreams = true
  
}

task javadocJar(type: Jar) {
	from (javadoc)
	classifier "javadoc"
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

configurations {
    javadocTaglets
}

dependencies {
    javadocTaglets "org.jdrupes.taglets:plantuml-taglet:1.0.+"
    // javadocTaglets "com.github.mnlipp:jdrupes-taglets:master-SNAPSHOT"
}

javadoc {
    // Make sure that other projects' compileClasspaths are resolved
    rootProject.subprojects
        .findAll({project -> project.name.startsWith("org.jgrapes") &&
            project.name != "org.jgrapes.core"})
        .each{project -> dependsOn project.tasks.assemble}

    // Does not work on JitPack, no /usr/bin/dot
    enabled = JavaVersion.current().isJava8() && !isJitPackBuild
    
	options.tagletPath = configurations.javadocTaglets.files as List
	options.taglets = ["org.jdrupes.taglets.plantUml.Taglet"]

    classpath = files(rootProject.subprojects
        .findAll({project -> project.name.startsWith("org.jgrapes")})
        .collect {project -> project.sourceSets.main.compileClasspath})
	source rootProject.subprojects
		.findAll({project -> project.name.startsWith("org.jgrapes")})
		.collect {project -> project.sourceSets.main.allJava }
	options.addStringOption("doctitle", "JGrapes ${project.version}")
	options.addStringOption("overview", "${rootProject.rootDir}/overview.md")
	inputs.file "${rootProject.rootDir}/overview.md"
	options.addBooleanOption("use", true)
	options.addBooleanOption("linksource", true)
    if (JavaVersion.current().isJava8()) {
        options.stylesheetFile(file("${rootProject.rootDir}/misc/stylesheet.css"))
    }
	options.addStringOption("bottom", file("${rootProject.rootDir}/misc/javadoc.bottom.txt").text)
	options.links "https://docs.oracle.com/javase/8/docs/api/"
    options.links "https://mnlipp.github.io/jdrupes-httpcodec/javadoc/"
	destinationDir = file("${rootProject.buildDir}/javadoc")

}
	