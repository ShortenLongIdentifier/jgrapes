import java.util.regex.Pattern
import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent
import aQute.bnd.osgi.Processor

buildscript {
    repositories {
        jcenter()
        mavenCentral()
		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:3.2.0'
        classpath 'org.jdrupes.mdoclet:gradle-plugin:1.0.2'
    }
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url 'https://jitpack.io' }
    }
}

subprojects {

    apply plugin: 'biz.aQute.bnd.builder'

    tasks.withType(Javadoc).all { enabled = false }

    // The builder plugin doesn't provide access to the bnd properties.
    // Provide workaround as properties in extra bnd
    new Processor().withCloseable { processor ->
        processor.setProperties(project.file('bnd.bnd'))
        ext.set("bnd", processor.getFlattenedProperties());
    }

    group = 'jgrapes'
    version = bnd.base_version + "-SNAPSHOT"

    dependencies {
        compileOnly 'org.osgi:org.osgi.annotation:6.0.0'
        testCompile 'junit:junit:4.12'
    }

    // Configure sensible layout
    sourceSets {
        main {
            java {
                srcDir 'src'
            }
            resources {
                srcDir 'resources'
            }
        }

        test {
            java {
                srcDir 'test'
            }
            resources {
                srcDir 'resources'
            }
        }
    }
    
    test {
        testLogging {
            events TestLogEvent.FAILED,
                   TestLogEvent.SKIPPED,
                   TestLogEvent.PASSED,
                   TestLogEvent.STANDARD_ERROR,
                   TestLogEvent.STANDARD_OUT

            exceptionFormat TestExceptionFormat.FULL

            showStandardStreams = true
            showExceptions = true
            showStackTraces = true
            showCauses = true
        }
    }
}

apply plugin: 'org.jdrupes.mdoclet'

configurations {
    javadocTaglets
}

dependencies {
    javadocTaglets "org.jdrupes.taglets:plantuml-taglet:1.0.2"
    // javadocTaglets "com.github.mnlipp:jdrupes-taglets:master-SNAPSHOT"
}

task javadoc(type: Javadoc) {

    options.tagletPath = configurations.javadocTaglets.files as List
    options.taglets = ["org.jdrupes.taglets.plantUml.Taglet"]

    classpath = files(subprojects.collect {project -> 
        project.sourceSets.main.compileClasspath})
    source subprojects.collect {project -> project.sourceSets.main.allJava } 
    destinationDir = file("../jgrapes.gh-pages/javadoc")
    options.addStringOption("bottom", file("misc/javadoc.bottom.txt").text)
    options.addStringOption("link", "http://docs.oracle.com/javase/8/docs/api/")
    
    options.addStringOption("tag", "org.osgi.annotation.versioning.Version:Xp")
}
